ALGORITHME detecterCreneauDisponible-v5

  // La variable input contient déjà les données d'entrée
  // C'est un tableau dont chaque case contient une ligne du fichier d'entrée
  VARIABLES globales
    CHAINE: input[] // tableau de chaînes de caractères

  VARIABLES
    CHAINE: debutJournee, finJournee, debut, fin, creneauxSemaine[][]
    ENTIER: nombreCreneaux, nombreDeTestsAFaire, position, indiceDuJour

DEBUT
  debutJournee ← "07:59"
  finJournee ← "18:00"

  // Sur la première ligne du fichier d'entrée on lit le nombre de créneaux
  nombreCreneaux ← input[0]

  // On lit les créneaux à partir de la 2ème ligne d'input (indice 1)
  POUR position ALLANT DE 1 À nombreCreneaux PAR PAS DE 1 FAIRE
    // On extrait le numéro du jour qu'on utilisera comme indice
    numeroDuJour ← extraireNumeroJour(input[position])

    // On extrait le créneau
    creneau ← extraireCreneau(input[position])

    // On n'oublie pas de soustraire 1 au numéro du jour pour obtenir
    // le bon indice
    indiceDuJour ← numeroDuJour - 1

    // On ajoute ce créneau dans la bonne case correspondant à son jour
    ajouterDansTableau(creneauxSemaine[indiceDuJour], creneau)
  FIN POUR
  
  // On lit les créneaux de chaque jour dans notre tableau creneauxSemaine
  POUR indiceDuJour ALLANT DE 0 À tailleDuTableau(creneauxSemaine) - 1 PAR PAS DE 1 FAIRE
    creneaux ← creneauxSemaine[indiceDuJour];

    // On ne traite que les jours avec des créneaux
    SI (tailleDuTableau(creneaux) > 0) ALORS
      // On trie par ordre chronologique
      creneaux ← trierParOrdreChronologique(creneaux)

      // On filtre les créneaux superposés
      creneaux ← filtrerSuperpositions(creneaux)

      // Il faut calculer les N+1 tests après le filtrage
      nombreDeTestsAFaire ← tailleDuTableau(creneaux) + 1

      // On connaît le nombre de tests à effectuer
      POUR position ALLANT DE 0 À nombreDeTestsAFaire - 1 PAR PAS DE 1 FAIRE
        // Pour le 1er test on utilise debutJournee
        SI (position = 0) ALORS
          debut ← debutJournee
        SINON
          // Lors du test 2 il faut prendre la fin du créneau 1
          debut ← lireHoraireFinDeCreneau(creneaux[position - 1])
        FIN SI

        // Pour le dernier test, il faut utiliser finJournee !    
        SI (position = nombreDeTestsAFaire - 1) ALORS
          fin ← finJournee
        SINON
          fin ← lireHoraireDebutDeCreneau(creneaux[position])
        FIN SI

        SI (dureeTrou(debut, fin) >= 60) ALORS
          afficherReponse(indiceDuJour, debut)
          finDuProgramme
        FIN SI
      FIN POUR
    FIN SI
  FIN POUR
FIN